#!groovy

properties([
  pipelineTriggers([cron('0 3 * * *')]),

  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'https://fees-register.aat.platform.hmcts.net', description: 'The URL you want to run these tests against')
  ])
])

@Library("Infrastructure")

def product = "fees-register"
def component = "frontend"

def secrets = [
  'fees-register-${env}'      : [
    secret('editors-username', 'EDITOR_USERNAME'),
    secret('editors-password', 'EDITOR_PASSWORD'),
    secret('approver-username', 'APPROVER_USERNAME'),
    secret('approver-password', 'APPROVER_PASSWORD')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}


withNightlyPipeline("nodejs", product, component) {

  env.TEST_URL = params.URL_TO_TEST
  env.NIGHTLY_TEST= true
  loadVaultSecrets(secrets)
  enableFullFunctionalTest()
  enableFortifyScan()
  enableCrossBrowserTest(['chrome','firefox','microsoft'])
  enableSecurityScan()
  after('checkout') {
    sh "yarn cache clean"
    echo 'ccfr-fees-register-admin-web checked out'
  }
  after('build') {
    sh 'yarn setup'
    sh 'mkdir -p functional-output'
    sh 'chmod +x bin/run-crossbrowser-tests.sh'
  }
    after('fortify-scan') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
  }

  after('crossBrowserTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }
}
