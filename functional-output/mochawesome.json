{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2021-01-03T22:47:46.610Z",
    "end": "2021-01-03T22:48:23.151Z",
    "duration": 36541,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "6effb194-c56b-45d2-bfe9-38cb761e1067",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7007e629-d3ae-4a9f-af86-afd3871208e6",
          "title": "CC FeesRegister Admin Acceptance Tests",
          "fullFile": "/Users/krishnakishorenuthalapati/feesadminfunctionaltests/ccfr-fees-register-admin-web/acceptance-tests/test/end-to-end/tests/CCFeesRegister_ApproverScreenValidation_test.js",
          "file": "/acceptance-tests/test/end-to-end/tests/CCFeesRegister_ApproverScreenValidation_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 650,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "550ba906-3ba6-4d5d-8516-2c251714fec9",
              "parentUUID": "7007e629-d3ae-4a9f-af86-afd3871208e6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook: BeforeSuite",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests \"before all\" hook: BeforeSuite",
              "timedOut": false,
              "duration": 9277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.amOnPage('/');\nI.wait(CCFRATConstants.twoSecondWaitTime);\nI.resizeWindow(CCFRATConstants.windowsSizeX, CCFRATConstants.windowsSizeY);",
              "err": {},
              "uuid": "5ada9bfe-8504-4e89-96bf-5395cded986f",
              "parentUUID": "7007e629-d3ae-4a9f-af86-afd3871208e6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "bfe8b985-84e0-42a5-8801-d70011473a97",
              "parentUUID": "7007e629-d3ae-4a9f-af86-afd3871208e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "18917444-542f-4d5a-aca3-7c7428572002",
              "parentUUID": "7007e629-d3ae-4a9f-af86-afd3871208e6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "df89a4fc-3ee5-4675-8527-b3065ebc49d0",
              "parentUUID": "7007e629-d3ae-4a9f-af86-afd3871208e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "FeesRegister Admin Console Approver Screen Validation",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests: FeesRegister Admin Console Approver Screen Validation",
              "timedOut": false,
              "duration": 26609,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "I.login('functionaltestapprover@hmcts.net', 'LevelAt12');\nI.wait(CCFRATConstants.tenSecondWaitTime);\nI.waitForText('Welcome', CCFRATConstants.tenSecondWaitTime);\nI.see('View all fees');\nI.see('View all discontinued fees');\nI.see('My open actions');\nI.see('Applicants');\nI.see('Jurisdictions 1');\nI.see('Jurisdictions 2');\nI.see('Services');\nI.see('Channels');\nI.see('Events');\nI.see('Directions');\nI.Logout(\"approver\");",
              "err": {
                "message": "Error: Text \"Welcome\" was not found on page after 20 sec\nProtocol error (Runtime.callFunctionOn): Session closed. Most likely the page has been closed.",
                "estack": "Text \"Welcome\" was not found on page after 20 sec\nProtocol error (Runtime.callFunctionOn): Session closed. Most likely the page has been closed.\n\nScenario Steps:\n\n- I.waitForText(\"Welcome\", 20) at Test.<anonymous> (acceptance-tests/test/end-to-end/tests/CCFeesRegister_ApproverScreenValidation_test.js:16:5)\n- I.wait(20) at Test.<anonymous> (acceptance-tests/test/end-to-end/tests/CCFeesRegister_ApproverScreenValidation_test.js:15:5)\n- I.click({\"css\":\"[type=\\\"submit\\\"]\"}) at Object.login (acceptance-tests/test/end-to-end/pages/steps_file.js:19:10)\n- I.waitForElement({\"css\":\"[type=\\\"submit\\\"]\"}, 40) at Object.login (acceptance-tests/test/end-to-end/pages/steps_file.js:18:10)\n- I.fillField(\"Password\", \"LevelAt12\") at Object.login (acceptance-tests/test/end-to-end/pages/steps_file.js:17:10)\n- I.fillField(\"Email address\", \"functionaltestapprover@hmcts.net\") at Object.login (acceptance-tests/test/end-to-end/pages/steps_file.js:16:10)\n- I.waitForElement(\"#username\", 40) at Object.login (acceptance-tests/test/end-to-end/pages/steps_file.js:15:49)\n- I.amOnPage(\"/\") at Object.login (acceptance-tests/test/end-to-end/pages/steps_file.js:14:10)\n\n",
                "diff": null
              },
              "uuid": "d8f2a515-5814-496a-8d99-04a8a12ccf96",
              "parentUUID": "7007e629-d3ae-4a9f-af86-afd3871208e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "FeesRegister Verify New fee for Approval",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests: FeesRegister Verify New fee for Approval",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const feeKeyword = \"SN\" + faker.random.number(RANDOM_NUMBER);\nconst submitBtnVisibilityChk = true;\nI.login('functionaltesteditor@hmcts.net', 'LevelAt12');\nI.wait(CCFRATConstants.twoSecondWaitTime);\nI.waitForText('Welcome', CCFRATConstants.tenSecondWaitTime);\nI.see('Add a new fee');\nI.addNewFee(feeKeyword);\nI.waitForText('Fee Created', CCFRATConstants.tenSecondWaitTime);\nI.see('Fee has been created successfully.');\nI.click('Return to welcome page');\nI.wait(CCFRATConstants.twoSecondWaitTime);\nI.waitForText('Welcome', CCFRATConstants.tenSecondWaitTime);\nI.submitForApproval(feeKeyword, submitBtnVisibilityChk);\nI.Logout(\"editor\");\nI.login('functionaltestapprover@hmcts.net', 'LevelAt12');\nI.wait(CCFRATConstants.twoSecondWaitTime);\nI.waitForText('Welcome', CCFRATConstants.tenSecondWaitTime);\nI.verifyFeesSentForApproval(feeKeyword);\nI.Logout(\"approver\");",
              "err": {},
              "uuid": "7b26b013-1d7f-474d-80a6-466590c4e0c4",
              "parentUUID": "7007e629-d3ae-4a9f-af86-afd3871208e6",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d8f2a515-5814-496a-8d99-04a8a12ccf96"
          ],
          "pending": [],
          "skipped": [
            "7b26b013-1d7f-474d-80a6-466590c4e0c4"
          ],
          "duration": 26609,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "a2b820e6-73a4-4c6b-91de-5a781e8d1e7b",
          "title": "CC FeesRegister Admin Acceptance Tests",
          "fullFile": "/Users/krishnakishorenuthalapati/feesadminfunctionaltests/ccfr-fees-register-admin-web/acceptance-tests/test/end-to-end/tests/CCFeesRegister_EditorScreenValidation_test.js",
          "file": "/acceptance-tests/test/end-to-end/tests/CCFeesRegister_EditorScreenValidation_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests \"before all\" hook: codeceptjs.beforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "be8d41a6-8e5a-466d-9bc3-b894d7e5ff42",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook: BeforeSuite",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests \"before all\" hook: BeforeSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const errHandler = (err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n};\nrecorder.errHandler((err) => {\n  errHandler(err);\n});\nif (!fn) throw new Error('fn is not defined');\nevent.emit(event.hook.started, suite);\nif (!recorder.isRunning()) {\n  recorder.start();\n  recorder.errHandler((err) => {\n    errHandler(err);\n  });\n}\nthis.test.body = fn.toString();\nif (isAsyncFunction(fn)) {\n  fn.apply(this, getInjectedArguments(fn)).then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      errHandler(err);\n    });\n    recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, e));\n  });\n  return;\n}\ntry {\n  fn.apply(this, getInjectedArguments(fn));\n  recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n  recorder.add(`finish ${hookName} hook`, () => done());\n  recorder.catch();\n} catch (err) {\n  recorder.throw(err);\n  recorder.catch((e) => {\n    const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n    errHandler(err);\n  });\n  recorder.add('fire hook.failed', () => event.emit(event.hook.failed, suite, err));\n}",
              "err": {},
              "uuid": "f9e68d61-8ac3-414d-9006-f9b3c2889d96",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "00728a61-9879-4971-8570-f6e00b1c6e8b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "0e56532e-4a93-4a5e-b4c6-2b6557b960d1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "f18b5728-bef3-462f-bddd-d1005f70dad6",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "FeesRegister Admin Console Editor Screen Validation",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests: FeesRegister Admin Console Editor Screen Validation",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I.login('functionaltesteditor@hmcts.net', 'LevelAt12');\nI.wait(CCFRATConstants.tenSecondWaitTime);\nI.waitForText('Welcome', CCFRATConstants.tenSecondWaitTime);\nI.see('Choose an action');\nI.see('Reference Data');\nI.see('Add a new fee');\nI.see('Upload fees');\nI.see('View all fees');\nI.see('View all discontinued fees');\nI.see('My open actions');\nI.see('Applicants');\nI.see('Jurisdictions 1');\nI.see('Jurisdictions 2');\nI.see('Services');\nI.see('Channels');\nI.see('Events');\nI.see('Directions');\nI.Logout(\"editor\");",
              "err": {},
              "uuid": "bc7b9773-deb5-4e61-bceb-6f2587771183",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "FeesRegister Add New Fee and Submit for Approval",
              "fullTitle": "CC FeesRegister Admin Acceptance Tests: FeesRegister Add New Fee and Submit for Approval",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const feeKeyword = \"SN\" + faker.random.number(RANDOM_NUMBER);\nconst submitBtnVisibilityChk = true;\nI.login('functionaltesteditor@hmcts.net', 'LevelAt12');\nI.wait(CCFRATConstants.twoSecondWaitTime);\nI.waitForText('Welcome', CCFRATConstants.tenSecondWaitTime);\nI.see('Choose an action');\nI.see('Add a new fee');\nI.addNewFee(feeKeyword);\nI.waitForText('Fee Created', CCFRATConstants.twoSecondWaitTime);\nI.see('Fee has been created successfully.');\nI.click('Return to welcome page');\nI.wait(CCFRATConstants.twoSecondWaitTime);\nI.waitForText('Welcome', CCFRATConstants.tenSecondWaitTime);\nI.submitForApproval(feeKeyword, submitBtnVisibilityChk);\nI.Logout(\"editor\");",
              "err": {},
              "uuid": "978cf315-5a3c-4094-945d-77236c928cb3",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "bc7b9773-deb5-4e61-bceb-6f2587771183",
            "978cf315-5a3c-4094-945d-77236c928cb3"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "mochaFile": "functional-output/result.xml",
        "reportDir": "functional-output",
        "takePassedScreenshot": false,
        "clearOldScreenshots": true,
        "shortScrFileNames": false
      },
      "version": "4.1.0"
    }
  }
}