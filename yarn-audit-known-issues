{"actions":[],"advisories":{"1105261":{"findings":[{"version":"6.0.0","paths":["mocha-junit-reporter>mocha>serialize-javascript"]}],"found_by":null,"deleted":null,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2024-11831\n- https://github.com/yahoo/serialize-javascript/pull/173\n- https://github.com/yahoo/serialize-javascript/commit/f27d65d3de42affe2aac14607066c293891cec4e\n- https://access.redhat.com/security/cve/CVE-2024-11831\n- https://bugzilla.redhat.com/show_bug.cgi?id=2312579\n- https://access.redhat.com/errata/RHSA-2025:1334\n- https://access.redhat.com/errata/RHSA-2025:1468\n- https://github.com/yahoo/serialize-javascript/commit/7f3ac252d86b802454cb43782820aea2e0f6dc25\n- https://access.redhat.com/errata/RHBA-2025:0304\n- https://access.redhat.com/errata/RHSA-2025:4511\n- https://access.redhat.com/errata/RHSA-2025:8059\n- https://access.redhat.com/errata/RHSA-2025:8479\n- https://access.redhat.com/errata/RHSA-2025:8544\n- https://access.redhat.com/errata/RHSA-2025:8551\n- https://github.com/advisories/GHSA-76p7-773f-r4q5","created":"2025-02-10T18:30:47.000Z","id":1105261,"npm_advisory_id":null,"overview":"A flaw was found in npm-serialize-javascript. The vulnerability occurs because the serialize-javascript module does not properly sanitize certain inputs, such as regex or other JavaScript object types, allowing an attacker to inject malicious code. This code could be executed when deserialized by a web browser, causing Cross-site scripting (XSS) attacks. This issue is critical in environments where serialized data is sent to web clients, potentially compromising the security of the website or web application using this package.","reported_by":null,"title":"Cross-site Scripting (XSS) in serialize-javascript","metadata":null,"cves":["CVE-2024-11831"],"access":"public","severity":"moderate","module_name":"serialize-javascript","vulnerable_versions":">=6.0.0 <6.0.2","github_advisory_id":"GHSA-76p7-773f-r4q5","recommendation":"Upgrade to version 6.0.2 or later","patched_versions":">=6.0.2","updated":"2025-06-05T00:31:19.000Z","cvss":{"score":5.4,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"},"cwe":["CWE-79"],"url":"https://github.com/advisories/GHSA-76p7-773f-r4q5"},"1106485":{"findings":[{"version":"1.0.2","paths":["morgan>on-headers"]}],"found_by":null,"deleted":null,"references":"- https://github.com/jshttp/on-headers/security/advisories/GHSA-76c9-3jph-rj3q\n- https://nvd.nist.gov/vuln/detail/CVE-2025-7339\n- https://github.com/expressjs/morgan/issues/315\n- https://github.com/jshttp/on-headers/issues/15\n- https://github.com/jshttp/on-headers/commit/c6e384908c9c6127d18831d16ab0bd96e1231867\n- https://cna.openjsf.org/security-advisories.html\n- https://github.com/advisories/GHSA-76c9-3jph-rj3q","created":"2025-07-17T21:17:19.000Z","id":1106485,"npm_advisory_id":null,"overview":"### Impact\n\nA bug in on-headers versions `< 1.1.0` may result in response headers being inadvertently modified when an array is passed to `response.writeHead()`\n\n### Patches\n\nUsers should upgrade to `1.1.0`\n\n### Workarounds\n\nUses are encouraged to upgrade to `1.1.0`, but this issue can be worked around by passing an object to `response.writeHead()` rather than an array.","reported_by":null,"title":"on-headers is vulnerable to http response header manipulation","metadata":null,"cves":["CVE-2025-7339"],"access":"public","severity":"low","module_name":"on-headers","vulnerable_versions":"<1.1.0","github_advisory_id":"GHSA-76c9-3jph-rj3q","recommendation":"Upgrade to version 1.1.0 or later","patched_versions":">=1.1.0","updated":"2025-07-18T09:03:02.000Z","cvss":{"score":3.4,"vectorString":"CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N"},"cwe":["CWE-241"],"url":"https://github.com/advisories/GHSA-76c9-3jph-rj3q"}},"muted":[],"metadata":{"vulnerabilities":{"info":0,"low":1,"moderate":1,"high":0,"critical":0},"dependencies":614,"devDependencies":1,"optionalDependencies":0,"totalDependencies":615}}
